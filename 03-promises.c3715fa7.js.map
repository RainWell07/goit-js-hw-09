{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA2BI,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACWC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE1BA,EAAM,G,CAlCnBO,SAASC,cAAc,SAASC,iBAAiB,UAAWC,IACxDA,EAAIC,iBAEJ,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,SAASJ,EAAWK,OAC5BC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAI9BtB,EAHiBsB,EACIL,GAASK,EAAI,GAAKF,GAGpCG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.querySelector('.form').addEventListener('submit', (evt) => {\n    evt.preventDefault();\n\n    const inputDelay = document.querySelector('input[name=\"delay\"]');\n    const inputStep = document.querySelector('input[name=\"step\"]');\n    const inputAmount = document.querySelector('input[name=\"amount\"]');\n\n    const delay = parseInt(inputDelay.value);\n    const step = parseInt(inputStep.value);\n    const amount = parseInt(inputAmount.value);\n\n    for (let i = 1; i <= amount; i++) {\n        const position = i;\n        const promiseDelay = delay + (i - 1) * step;\n    \n        createPromise(position, promiseDelay)\n          .then(({ position, delay }) => { \n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n    });\n\n    function createPromise(position, delay) {\n        return new Promise((resolve, reject) => {\n          setTimeout(() => { \n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            resolve({ position, delay }); \n            } else {\n            reject({ position, delay }); \n            }\n          }, delay);\n        });\n      }"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","inputDelay","inputStep","inputAmount","delay1","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c3715fa7.js.map"}