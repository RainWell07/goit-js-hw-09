{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA2BI,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACWC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAElBA,E,IAlCbO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAACC,GACxDA,EAAIC,iBAUJ,IARA,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,SAASJ,EAAWK,OAC5BC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAE3BG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAI9BtB,EAHiBsB,EACIL,GAASK,EAAI,GAAKF,GAGpCG,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.querySelector('.form').addEventListener('submit', (evt) => {\n    evt.preventDefault();\n\n    const inputDelay = document.querySelector('input[name=\"delay\"]');\n    const inputStep = document.querySelector('input[name=\"step\"]');\n    const inputAmount = document.querySelector('input[name=\"amount\"]');\n\n    const delay = parseInt(inputDelay.value);\n    const step = parseInt(inputStep.value);\n    const amount = parseInt(inputAmount.value);\n\n    for (let i = 1; i <= amount; i++) {\n        const position = i;\n        const promiseDelay = delay + (i - 1) * step;\n    \n        createPromise(position, promiseDelay)\n          .then(({ position, delay }) => { \n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n    });\n\n    function createPromise(position, delay) {\n        return new Promise((resolve, reject) => {\n          setTimeout(() => { \n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            resolve({ position, delay }); \n            } else {\n            reject({ position, delay }); \n            }\n          }, delay);\n        });\n      }"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","inputDelay","inputStep","inputAmount","delay1","parseInt","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9d4ef36b.js.map"}